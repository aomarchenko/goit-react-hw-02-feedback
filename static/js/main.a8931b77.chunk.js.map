{"version":3,"sources":["components/statistics/Statistics.js","components/feedback/FeedbackOptions.js","components/Section/Section.js","components/notification/Notification.js","App.js","index.js","components/feedback/Feedback.module.css","components/Section/Section.module.css"],"names":["Statistics","onTotal","onPercentage","good","bad","neutral","FeedbackOptions","onGood","onBad","onNeutral","className","styles","FeedbackControls","type","onClick","event","Section","title","children","feedback","feedbackTitle","Notification","message","Feedback","state","props","initialValue","makeGoodFeedback","setState","prevState","makeNeutralFeedback","makeBadFeedback","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","defaultProps","ReactDOM","render","StrictMode","document","querySelector","module","exports"],"mappings":"qRAUeA,EATI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,IAAKC,EAArC,EAAqCA,QAArC,OACjB,gCACE,0CAAaF,EAAb,OACA,6CAAgBE,EAAhB,OACA,yCAAYD,EAAZ,OACA,kDAAqBH,KACrB,sDAAyBC,EAAzB,W,gBC2BWI,EA/BS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,UAAlB,OACtB,gCACE,wBACEC,UAAWC,IAAOC,iBAClBC,KAAK,SACLC,QAAS,SAAAC,GACPR,KAJJ,kBASA,wBACEG,UAAWC,IAAOC,iBAClBC,KAAK,SACLC,QAAS,SAAAC,GACPN,KAJJ,qBASA,wBACEC,UAAWC,IAAOC,iBAClBC,KAAK,SACLC,QAAS,SAAAC,GACPP,KAJJ,qB,gBCNWQ,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASR,UAAWC,IAAOQ,SAA3B,UACE,oBAAIT,UAAWC,IAAOS,cAAtB,SAAsCH,IACrCC,MCLQG,EADM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCMpCC,E,4MAKJC,MAAQ,CACNrB,KAAM,EAAKsB,MAAMC,aACjBrB,QAAS,EAAKoB,MAAMC,aACpBtB,IAAK,EAAKqB,MAAMC,c,EAGlBC,iBAAmB,WACjB,EAAKC,UAAS,SAAAC,GACZ,MAAO,CAAE1B,KAAM0B,EAAU1B,KAAO,O,EAIpC2B,oBAAsB,WACpB,EAAKF,UAAS,SAAAC,GACZ,MAAO,CAAExB,QAASwB,EAAUxB,QAAU,O,EAG1C0B,gBAAkB,WAChB,EAAKH,UAAS,SAAAC,GACZ,MAAO,CAAEzB,IAAKyB,EAAUzB,IAAM,O,EAIlC4B,mBAAqB,WACnB,OAAO,EAAKR,MAAMrB,KAAO,EAAKqB,MAAMpB,IAAM,EAAKoB,MAAMnB,S,EAEvD4B,gCAAkC,WAChC,OAAOC,KAAKC,MACH,EAAKX,MAAMrB,MAAQ,EAAKqB,MAAMrB,KAAO,EAAKqB,MAAMnB,QAAU,EAAKmB,MAAMpB,KAA5E,M,4CAIJ,WACE,OACE,qCACE,eAAC,EAAD,CAASa,MAAM,wBAAf,UACE,cAAC,EAAD,CACEV,OAAQ6B,KAAKT,iBACbnB,MAAO4B,KAAKL,gBACZtB,UAAW2B,KAAKN,sBACf,OAEL,cAAC,EAAD,CAASb,MAAM,aAAf,SACGmB,KAAKZ,MAAMrB,KAAOiC,KAAKZ,MAAMnB,QAAU+B,KAAKZ,MAAMpB,IAAM,GACvD,cAAC,EAAD,CACEH,QAASmC,KAAKJ,qBACd9B,aAAckC,KAAKH,kCACnB7B,IAAKgC,KAAKZ,MAAMpB,IAChBD,KAAMiC,KAAKZ,MAAMrB,KACjBE,QAAS+B,KAAKZ,MAAMnB,YAI1B,cAAC,EAAD,UACG+B,KAAKZ,MAAMrB,KAAOiC,KAAKZ,MAAMnB,QAAU+B,KAAKZ,MAAMpB,MAAQ,GACzD,cAAC,EAAD,CAAckB,QAAQ,kC,GA5DXe,aAAjBd,EACGe,aAAe,CACpBZ,aAAc,GAiEHH,QCpEfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,W,kBCVzBC,EAAOC,QAAU,CAAC,iBAAmB,qC,kBCArCD,EAAOC,QAAU,CAAC,SAAW,6B","file":"static/js/main.a8931b77.chunk.js","sourcesContent":["import React from 'react';\nconst Statistics = ({ onTotal, onPercentage, good, bad, neutral }) => (\n  <div>\n    <span>Good: {good} </span>\n    <span>Neutral: {neutral} </span>\n    <span>Bad: {bad} </span>\n    <p>Total Feedbacks: {onTotal}</p>\n    <p>Everage Good Values: {onPercentage}%</p>\n  </div>\n);\nexport default Statistics;\n","import React from 'react';\nimport styles from './Feedback.module.css';\n\nconst FeedbackOptions = ({ onGood, onBad, onNeutral }) => (\n  <div>\n    <button\n      className={styles.FeedbackControls}\n      type=\"button\"\n      onClick={event => {\n        onGood();\n      }}\n    >\n      Good\n    </button>\n    <button\n      className={styles.FeedbackControls}\n      type=\"button\"\n      onClick={event => {\n        onNeutral();\n      }}\n    >\n      Neutral\n    </button>\n    <button\n      className={styles.FeedbackControls}\n      type=\"button\"\n      onClick={event => {\n        onBad();\n      }}\n    >\n      Bad\n    </button>\n  </div>\n);\nexport default FeedbackOptions;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={styles.feedback}>\n      <h1 className={styles.feedbackTitle}>{title}</h1>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: propTypes.string.isRequired,\n  children: propTypes.any.isRequired,\n};\nexport default Section;\n","import React from 'react';\n\nconst Notification = ({ message }) => <p>{message}</p>;\nexport default Notification;\n","import './App.css';\n\nimport React, { Component } from 'react';\nimport Statistics from './components/statistics/Statistics';\nimport FeedbackOptions from './components/feedback/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/notification/Notification';\n\nclass Feedback extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  state = {\n    good: this.props.initialValue,\n    neutral: this.props.initialValue,\n    bad: this.props.initialValue,\n  };\n\n  makeGoodFeedback = () => {\n    this.setState(prevState => {\n      return { good: prevState.good + 1 };\n    });\n  };\n\n  makeNeutralFeedback = () => {\n    this.setState(prevState => {\n      return { neutral: prevState.neutral + 1 };\n    });\n  };\n  makeBadFeedback = () => {\n    this.setState(prevState => {\n      return { bad: prevState.bad + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.bad + this.state.neutral;\n  };\n  countPositiveFeedbackPercentage = () => {\n    return Math.round(\n      100 * (this.state.good / (this.state.good + this.state.neutral + this.state.bad)),\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            onGood={this.makeGoodFeedback}\n            onBad={this.makeBadFeedback}\n            onNeutral={this.makeNeutralFeedback}\n          />{' '}\n        </Section>\n        <Section title=\"Statistics\">\n          {this.state.good + this.state.neutral + this.state.bad > 0 && (\n            <Statistics\n              onTotal={this.countTotalFeedback()}\n              onPercentage={this.countPositiveFeedbackPercentage()}\n              bad={this.state.bad}\n              good={this.state.good}\n              neutral={this.state.neutral}\n            />\n          )}\n        </Section>\n        <Section>\n          {this.state.good + this.state.neutral + this.state.bad === 0 && (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\nexport default Feedback;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackControls\":\"Feedback_FeedbackControls__1lppN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Section_feedback__y9ZFq\"};"],"sourceRoot":""}